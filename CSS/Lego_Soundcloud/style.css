*{
    padding: 0;
    margin: 0;
    box-sizing: border-box; /*box will stay at the size you specified even if you add padding
    /* dont put flex up here */
}

nav{
    background-color: yellow;
    min-height: 50px;
}

.container{
    background-color: lightgreen;
    /* min height so you are gaurneteed this is the smallest, if you put something taller in it will grow */
    min-height: 50px;
    /* almost never put regular height */
    width: 70%;
    margin: 0 auto;
}

/* .operator with class */
.box{
    width: 500px;
    min-height: 500px;
    background-color: blue;
    /* content of the box was reduced by the padding because of box-sizing: border-box */
    /* if youre doing calculations with box widths, and want the boxes to stay at the width you assigned, use borderbox- it keeps the size the same */
    padding: 20px;
    /* borders and beyond unnaffected by box-sizing: border-box */
    border: 5px;
}

main{
    background-color: cornflowerblue;
    min-height: 500px;
    width: 70%;
    margin: 0 auto;
}

.main-header{
    background-color: lavender;
    min-height: 100px;
}

.main-container{
    background-color: orange;
    min-height: 500px;
}

.main-nav{
    background-color: hotpink;
    min-height: 50px;
}

.main-content{
    background-color: greenyellow;
    min-height: 450px;
}

/* these two menus need to be flex in order to be on the same line */
/* they need dimensions, give them flex child properties */
.main-menu{
    background-color: lightblue;
    min-height: 50px;
    /* breaking up parent into 4 parts, 3 main menu, 1 social */
    flex: 3;
}
.social-menu{
    background-color: goldenrod;
    min-height: 50px;
    /* breaking up parent into 4 parts, 3 main menu, 1 social */
    flex: 1;
}

/* utility class for above*/
.flex{
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.content{
    background-color: navy;
    /* same height as main content, its parent */
    min-height: 450px;
    flex: 3;
}

.aside{
    background-color: pink;
    /* sam height as parent */
    min-height: 450px;
    flex: 1;
}